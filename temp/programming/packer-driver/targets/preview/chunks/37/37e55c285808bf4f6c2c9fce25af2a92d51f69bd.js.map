{"version":3,"sources":["file:///Users/liheng/project/cocos/game_code/assets/Script/AtomMove.ts"],"names":["_decorator","Component","Vec2","randomRange","ccclass","property","AtomMove","randoVec2","start","getRandomDir","update","deltaTime","x","node","position","newX","moveSpeed","y","newY","setPosition","Math","cos","PI","sin","normalize"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;;;;;;OACtC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAGjBM,Q,WADZF,OAAO,CAAC,UAAD,C,2BAAR,MACaE,QADb,SAC8BL,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA,eAK5BM,SAL4B,GAKR,IAAIL,IAAJ,EALQ;AAAA;;AAOpCM,QAAAA,KAAK,GAAG;AACJ,eAAKC,YAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAIC,CAAsB,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAhD;AACA,cAAIG,IAAI,GAAGH,CAAC,GAAG,KAAKI,SAAL,GAAiBL,SAAjB,GAA6B,KAAKJ,SAAL,CAAeK,CAA3D;AAEA,cAAIK,CAAsB,GAAG,KAAKJ,IAAL,CAAUC,QAAV,CAAmBG,CAAhD;AACA,cAAIC,IAAI,GAAGD,CAAC,GAAG,KAAKD,SAAL,GAAiBL,SAAjB,GAA6B,KAAKJ,SAAL,CAAeU,CAA3D;AAEA,eAAKJ,IAAL,CAAUM,WAAV,CAAsBJ,IAAtB,EAA4BG,IAA5B;AACH;;AAEDT,QAAAA,YAAY,GAAE;AACV,eAAKF,SAAL,CAAeK,CAAf,GAAmBQ,IAAI,CAACC,GAAL,CAASlB,WAAW,CAAC,CAAC,GAAF,EAAO,GAAP,CAAX,IAA0BiB,IAAI,CAACE,EAAL,GAAS,GAAnC,CAAT,CAAnB;AACA,eAAKf,SAAL,CAAeU,CAAf,GAAmBG,IAAI,CAACG,GAAL,CAASpB,WAAW,CAAC,CAAC,GAAF,EAAO,GAAP,CAAX,IAA0BiB,IAAI,CAACE,EAAL,GAAU,GAApC,CAAT,CAAnB;AACA,eAAKf,SAAL,CAAeiB,SAAf;AACH;;AAzBmC,O,4EAEnCnB,Q;;;;;iBACW,I","sourcesContent":["import { _decorator, Component, Node, Vec2, randomRange } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('AtomMove')\nexport class AtomMove extends Component {\n\n    @property\n    moveSpeed = 20.0;\n\n    private randoVec2 : Vec2  = new Vec2();\n\n    start() {\n        this.getRandomDir();\n    }\n\n    update(deltaTime: number) {\n        let x : number | undefined = this.node.position.x;\n        let newX = x + this.moveSpeed * deltaTime * this.randoVec2.x;\n\n        let y : number | undefined = this.node.position.y;\n        let newY = y + this.moveSpeed * deltaTime * this.randoVec2.y;\n\n        this.node.setPosition(newX, newY);\n    }\n\n    getRandomDir(){\n        this.randoVec2.x = Math.cos(randomRange(-180, 180) * (Math.PI/ 180));\n        this.randoVec2.y = Math.sin(randomRange(-180, 180) * (Math.PI / 180));\n        this.randoVec2.normalize();\n    }\n}\n\n"]}